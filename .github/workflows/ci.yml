name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test (Elixir ${{matrix.elixir}} | OTP ${{matrix.otp}})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: '1.18.0'
            otp: '27.2'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Restore Rust cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            native/fit_file_native/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: mix deps.get

      - name: Compile (with warnings as errors)
        env:
          MIX_ENV: test
          RUSTLER_PRECOMPILATION_FIT_FILE_BUILD: "true"
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run tests
        env:
          RUSTLER_PRECOMPILATION_FIT_FILE_BUILD: "true"
        run: mix test

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26.2'
          elixir-version: '1.16.0'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-lint-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-lint-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install dependencies
        run: mix deps.get

      - name: Run Credo
        run: mix credo --strict
        continue-on-error: true

      - name: Check Rust formatting
        run: |
          cd native/fit_file_native
          cargo fmt -- --check

      - name: Run Clippy
        run: |
          cd native/fit_file_native
          cargo clippy -- -D warnings
